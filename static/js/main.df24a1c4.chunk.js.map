{"version":3,"sources":["components/Wrapper/index.js","components/Img/index.js","components/Heading/index.js","App.js","index.js"],"names":["Wrapper","props","className","children","Img","role","onClick","handleIncremen","id","alt","name","src","image","Heading","App","state","imgs","clicked","count","high","includes","setState","shuffle","highScore","console","log","im","i","length","randNum","Math","floor","random","temp","this","imgsData","heading","map","img","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4qDAOeA,MAJf,SAAiBC,GACb,OAAO,yBAAKC,UAAU,WAAWD,EAAME,W,MCW5BC,MAZf,SAAaH,GACX,OACE,yBAAKI,KAAK,MAAMH,UAAU,oBACxB,yBAAKA,UAAU,iBACb,4BAAQI,QAAS,kBAAML,EAAMM,eAAeN,EAAMO,MAChD,yBAAKC,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,Y,aCM5BC,MAVf,SAAiBZ,GACb,OACI,yBAAMC,UAAU,aAEZ,yFACCD,EAAME,WC+EJW,G,iNA/EbC,MAAQ,CACNC,KAAM,GACNC,QAAS,GACTC,MAAO,EACPC,KAAM,G,EAQRZ,eAAiB,SAAAC,GACX,EAAKO,MAAME,QAAQG,SAASZ,GAE9B,EAAKa,SACH,CACEH,MAAO,EACPF,KAAM,EAAKM,QAAQ,EAAKP,MAAMC,MAC9BC,QAAS,GACTE,KAAM,EAAKI,UAAU,EAAKR,MAAMG,MAAO,EAAKH,MAAMI,QAMtD,EAAKE,SACH,CACEH,MAAO,EAAKH,MAAMG,MAAQ,EAC1BF,KAAM,EAAKM,QAAQ,EAAKP,MAAMC,MAC9BC,QAAQ,GAAD,mBAAM,EAAKF,MAAME,SAAjB,CAA0BT,MAEnC,kBAAMgB,QAAQC,IAAI,EAAKV,MAAMG,W,EAKnCK,UAAY,SAACL,EAAMC,GACjB,OAAID,EAAQC,EACHD,EAEAC,G,EAIXG,QAAU,SAAAI,GACR,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAGE,OAAQD,IAAK,CAClC,IAAME,EAAUC,KAAKC,MAAMD,KAAKE,SAAWN,EAAGE,QACxCK,EAAOP,EAAGC,GAChBD,EAAGC,GAAKD,EAAGG,GACXH,EAAGG,GAAWI,EAEhB,OAAOP,G,mFA5CPQ,KAAKb,SAAS,CAAEL,KAAMmB,M,+BA8Cd,IAAD,OACP,OACE,yBAAKjC,UAAU,aACf,kBAAC,EAAD,KACE,kBAAC,EAAD,CAASkC,QAASF,KAAKnB,MAAMI,MAC7B,2CAAiBe,KAAKnB,MAAMI,MAC5B,sCAAYe,KAAKnB,MAAMG,QAEtBgB,KAAKnB,MAAMC,KAAKqB,KAAI,SAAAC,GACnB,OACE,kBAAC,EAAD,CACE/B,eAAgB,EAAKA,eACrBgC,IAAKD,EAAI9B,GACTA,GAAI8B,EAAI9B,GACRE,KAAM4B,EAAI5B,KACVE,MAAO0B,EAAI1B,iB,GAtEP4B,IAAMC,YCFxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.df24a1c4.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./wrapper.css\";\n\nfunction Wrapper(props) {\n    return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Img(props) {\n  return (\n    <div role=\"img\" className=\"card click-item \">\n      <div className=\"img-container\">\n        <button onClick={() => props.handleIncremen(props.id)}>\n          <img alt={props.name} src={props.image} />\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Img;\n","import React from \"react\";\nimport \"./style.css\";\n\n\nfunction Heading(props) {\n    return(\n        <div  className=\"jumbotron\">\n          \n            <h1>How far can you go with out selecting the same pic twice?</h1>\n            {props.children}\n          \n        </div>\n    )}    \n\nexport default Heading;","import React from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport Img from \"../src/components/Img\";\nimport imgsData from \"./imgs.json\";\nimport Heading from \"./components/Heading\";\nimport \"./App.css\";\n\n\nclass App extends React.Component {\n  state = {\n    imgs: [],\n    clicked: [],\n    count: 0,\n    high: 0\n  };\n\n  componentDidMount() {\n    this.setState({ imgs: imgsData });\n  }\n\n  // this function just simply handles the tally of guesses\n  handleIncremen = id => {\n    if (this.state.clicked.includes(id)) {\n      // User has clicked this image before\n      this.setState(\n        {\n          count: 0,\n          imgs: this.shuffle(this.state.imgs),\n          clicked: [],\n          high: this.highScore(this.state.count, this.state.high)\n        }\n      )\n    } else {\n      // User hasn't clicked before\n\n      this.setState(\n        {\n          count: this.state.count + 1,\n          imgs: this.shuffle(this.state.imgs),\n          clicked: [...this.state.clicked, id]\n        },\n        () => console.log(this.state.count)\n      );\n    }\n  };\n\n  highScore = (count,high) => {\n    if (count > high) {\n      return count\n    } else {\n      return high\n    }\n  };\n\n  shuffle = im => {\n    for (let i = 0; i < im.length; i++) {\n      const randNum = Math.floor(Math.random() * im.length);\n      const temp = im[i];\n      im[i] = im[randNum];\n      im[randNum] = temp;\n    }\n    return im;\n  };\n  render() {\n    return (\n      <div className=\"container\" >\n      <Wrapper>\n        <Heading heading={this.state.high}>\n        <h2>High Score: {this.state.high}</h2>\n        <h2>Score: {this.state.count}</h2>\n        </Heading>\n        {this.state.imgs.map(img => {\n          return (\n            <Img\n              handleIncremen={this.handleIncremen}\n              key={img.id}\n              id={img.id}\n              name={img.name}\n              image={img.image}\n            />\n          );\n        })}\n      </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}